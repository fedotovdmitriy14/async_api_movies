services:
  fastapi_service:
    build:
      context: ./fastapi_solution
    env_file:
      - fastapi_solution/src/.env
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - yandex_network

  nginx:
    image: nginx:latest
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - fastapi_service
    networks:
      - yandex_network
    ports:
      - "80:80"

  postgres:
    image: postgres:13
    volumes:
      - ./pg_data/:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - yandex_network
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: elasticsearch:8.5.3
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      xpack.security.enabled: "false"
      USE_SSL: "false"
    ports:
      - "9200:9200"
    networks:
      - yandex_network
    volumes:
      - ../elastic_data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -u elastic:elastic -s -f elasticsearch:9200/_cat/health >/dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - yandex_network
    volumes:
      - ../redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "6379:6379"

  etl:
    image: i19951/yandex_projects:etl
    restart: always
    env_file:
      - fastapi_solution/src/.env
    networks:
      - yandex_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

networks:
    yandex_network:
